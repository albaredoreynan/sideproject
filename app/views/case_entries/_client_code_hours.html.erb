<div class="span10">
  <div class="pull-left">
  </div>
</div>
<br/>
<br/>              
<div class="span10">                        
  <table class="table table-striped" id="case_entries" >
        <%
          @file_references = {}
          if current_user.role == 'Administrator' || current_user.role == 'Billing Clerk'
            # # @case_entries = CaseEntry.find(:all, :order => "entry_date DESC")
            if params[:date_from].present? && params[:date_to].present? || params[:practice_code]
               f = Date.parse(params[:date_from])
               t = Date.parse(params[:date_to])
               dfrom = f.strftime("%m/%d/%y")
               dto = t.strftime("%m/%d/%y")
               args = {}
               args.merge!(practice_code: params[:practice_code]) unless params[:practice_code].blank?
               args.merge!(cl_code_txt: params[:client_code]) unless params[:client_code].blank?
               # args.merge!(entry_date: params[:date_from]..params[:date_to]) unless params[:date_from].blank?
               # args.merge!(lawyer_id: current_user.lawyer_id) unless current_user.lawyer_id.blank?
               @case_entries = FileMatter.where(args).where("TO_DATE(case_date, 'MM/DD/YY')  BETWEEN ? AND ?", params[:date_from], params[:date_to]).where("practice_code <> ''").where("practice_code IS NOT NULL")
            # else
            #   @case_entries = CaseEntry.paginate(:page => params[:page], :per_page => 20).order(sort_column + " " + sort_direction)
            end
          else
          end
        %>
        <%

          if params[:date_from].nil? || params[:date_from].empty? 
            @beginning_date = Date.today.at_beginning_of_month
            @ending_date = Date.today
          else 
            @beginning_date = params[:date_from]
            @ending_date = params[:date_to]
          end

          @assigned_lawyers = Array.new 
          results = @case_entries.map { |u| [u.id, u.file_code] }
          results.each do |key, value|
            @al = AssignedLawyer.where(file_matter_id: key)
            @al.each do |x|
              @assigned_lawyers << x.lawyer_id
            end  
          end


          @lawname = Array.new
          @totalhours = Array.new

          @assigned_lawyers.uniq.each do |alaw|
            @name = Lawyer.find(alaw)
            @lawname << @name.full_name
            @totalhours << calculate_time_per_client_per_practice_code(alaw, @beginning_date, @ending_date, params[:client_code], params[:practice_code])
          end  
        %>
        <% @practice_name = PracticeTable.find_by_text_code(params[:practice_code]) %>
        <td colspan="5">
          <script>
            $(function () {
                $('#container').highcharts({
                    chart: {
                        type: 'bar'
                    },
                    title: {
                        text: 'Practice Area : <%= @practice_name.practice_name %>(<%= @practice_name.text_code %>)'
                    },
                    subtitle: {
                        text: 'Period Covers: <%=raw(@beginning_date)%> - <%=raw(@ending_date)%>'
                    },
                    xAxis: {
                        // categories: ['Africa', 'America', 'Asia', 'Europe', 'Oceania'],
                        categories: <%= raw(@lawname) %>,
                        title: {
                            text: null
                        }
                    },
                    yAxis: {
                        min: 0,
                        title: {
                            text: 'Total Hours for Client Service',
                            align: 'high'
                        },
                        labels: {
                            overflow: 'justify'
                        }
                    },
                    tooltip: {
                        valueSuffix: ' hours'
                    },
                    plotOptions: {
                        bar: {
                            dataLabels: {
                                enabled: true
                            }
                        }
                    },
                    legend: {
                        layout: 'vertical',
                        align: 'right',
                        verticalAlign: 'top',
                        x: -40,
                        y: 100,
                        floating: true,
                        borderWidth: 1,
                        backgroundColor: ((Highcharts.theme && Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),
                        shadow: true
                    },
                    credits: {
                        enabled: false
                    },
                    series: [{
                        name: 'Accumulated Hours',
                        // data: [107, 31, 835, 203, 2, 50, 33, 23, 34, 12]
                        data: <%= raw(@totalhours) %>
                    }
                    // }, 

                    // {
                    //     name: 'Year 1900',
                    //     data: [133, 156, 947, 408, 6, 50, 33, 23, 34, 12]
                    // }, 

                    // {
                    //     name: 'Year 2008',
                    //     data: [973, 914, 4054, 732, 34, 50, 33, 23, 34, 12]
                    // }

                    ]
                });
            });
          </script>
          <div id="container" style="width: 100%; height: 600px; margin: 0 auto"></div>
        </td>
        <tr><td colspan=5><strong>TOTAL HOURS :</strong><%= @totalhours.inject(:+) %></td></tr>
      
        <tr>
          <td colspan="2"><h5>Breakdown of File References Per Practices:</h5></td>
        </tr>
  </table>
</div>
